services:
  rabbitmq:
    image: zanzibar_sample_rabbitmq
    container_name: zanzibar_sample_rabbitmq
    build:
      context: ./services/rabbitmq
      dockerfile: Dockerfile
    volumes:
      - zanzibar-sample-rabbitmq-data:/var/lib/rabbitmq/mnesia/
    networks:
        - backnet
    env_file:
    - .env.secrets
    - ${APP_ENV}.env
    ports:
    - "5672:5672"
    expose:
    - "5672"
    healthcheck:
        test: rabbitmq-diagnostics -q ping
        timeout: 20s
        retries: 10

  postgres:
    image: zanzibar_sample_postgres
    platform: linux/amd64
    container_name: zanzibar_sample_postgres
    build:
      context: ./services/postgres
      dockerfile: Dockerfile
    restart: always
    networks:
      - backnet
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    volumes:
        - zanzibar-sample-postgres-data:/var/lib/postgresql/data
    ports:
        - "5432:5432"
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
        timeout: 20s
        retries: 10
    expose:
        - 5432
    user: postgres

  api:
    restart: always
    image: zanzibar_sample_api
    container_name: zanzibar_sample_api
    build:
        context: .
        dockerfile: ./flask/Dockerfile
    volumes:
      - ./flask:/api
      - ./common:/api/common
    ports:
      - '5000:5000'
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    depends_on:
      postgres:
          condition: service_healthy
      rabbitmq:
          condition: service_healthy
    networks:
      - backnet

  email_transmitter:
    image: ecorrouge/email-transmitter:latest
    container_name: zanzibar_sample_email_transmitter
    restart: unless-stopped
    networks:
      - backnet
    env_file:
      - .env.secrets
      - ${APP_ENV}.env
    environment:
      - MESSAGING_TYPE=RabbitMqConnection
      - PROCESSOR_TYPE=EmailServiceProcessor
      - PROCESSOR_MODULE=services.email_transmitter.src.email_processor
      - CONFIG_FILEPATH=/app/src/services/email_transmitter/src/config.json
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./services/email_transmitter/config.json:/app/src/services/email_transmitter/src/config.json


volumes:
  zanzibar-sample-postgres-data:
    name: zanzibar-sample-postgres-data
  zanzibar-sample-rabbitmq-data:
    name: zanzibar-sample-rabbitmq-data
    driver: local

networks:
  backnet:
